{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","_ref","title","fetchUrl","isLargeRow","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","trailerUrl","SetTrailerUrl","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","request","wrap","_context","prev","next","get","sent","data","results","abrupt","stop","apply","this","arguments","fetchData","react_default","createElement","className","index_es","map","movie","key","id","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","concat","src","poster_path","backdrop_path","alt","index_esm","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetcActionMovies","fetcComedyMovies","fetcHorrorMovies","fetcRomanceMovies","fetcDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","App","src_Banner","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd1b7d68.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({ baseURL: \"https://api.themoviedb.org/3\" });\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\nimport \"./row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nexport default function Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, SetTrailerUrl] = useState(\"\");\n\n  const baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      SetTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          SetTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <ScrollContainer className=\"scroll-container\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row_posterLarge\"}`}\n            src={`${baseUrl}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </ScrollContainer>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n","const API_KEY = \"c8db6c936183b6ea118c49955ea40321\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&language=en-US`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetcActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetcComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetcHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetcRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetcDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  console.log(movie);\n  function truncateString(str, num) {\n    if (str.length > num) {\n      return str.slice(0, num) + \"...\";\n    } else {\n      return str;\n    }\n  }\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n      }}\n    >\n      <div className=\"banner_content\">\n        <h1 className=\"title\">\n          {movie.title || movie.name || movie.original_name}\n        </h1>\n        <div className=\"banner_btns\">\n          <button className=\"banner_btn\">Play</button>\n          <button className=\"banner_btn\">My List</button>\n        </div>\n        <h1 className=\"banner_desc\">{movie.overview}</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport \"./App.css\";\nimport Banner from \"./Banner\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Banner />\n      <Row\n        title=\"Trending Now\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetcActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetcComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetcHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetcRomanceMovies} />\n      <Row title=\"Documentary Movies\" fetchUrl={requests.fetcDocumentaries} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}